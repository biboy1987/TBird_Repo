
first_AVR_via_Eclipse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000024c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000008  00800100  00800100  000002c0  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e4       	ldi	r30, 0x4C	; 76
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 30       	cpi	r26, 0x08	; 8
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 67 00 	call	0xce	; 0xce <main>
  c6:	0c 94 24 01 	jmp	0x248	; 0x248 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <main>:
  ce:	0e 94 71 00 	call	0xe2	; 0xe2 <BT_CentralEventDispatcher_onReset>
  d2:	0e 94 6e 00 	call	0xdc	; 0xdc <BT_CentralEventDispatcher_onCyclic>
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <BT_CentralEventDispatcher_onCyclic>:
  dc:	0e 94 85 00 	call	0x10a	; 0x10a <BT_LifeTimer_Api_onCyclic>
  e0:	fd cf       	rjmp	.-6      	; 0xdc <BT_CentralEventDispatcher_onCyclic>

000000e2 <BT_CentralEventDispatcher_onReset>:
  e2:	0e 94 10 01 	call	0x220	; 0x220 <BT_GPTimer_onReset>
  e6:	08 95       	ret

000000e8 <BT_LifeTimer_Api_onReset>:
  e8:	10 92 00 01 	sts	0x0100, r1
  ec:	10 92 01 01 	sts	0x0101, r1
  f0:	10 92 02 01 	sts	0x0102, r1
  f4:	10 92 03 01 	sts	0x0103, r1
  f8:	10 92 04 01 	sts	0x0104, r1
  fc:	10 92 05 01 	sts	0x0105, r1
 100:	10 92 06 01 	sts	0x0106, r1
 104:	10 92 07 01 	sts	0x0107, r1
 108:	08 95       	ret

0000010a <BT_LifeTimer_Api_onCyclic>:
 10a:	8f 92       	push	r8
 10c:	9f 92       	push	r9
 10e:	af 92       	push	r10
 110:	bf 92       	push	r11
 112:	cf 92       	push	r12
 114:	df 92       	push	r13
 116:	ef 92       	push	r14
 118:	ff 92       	push	r15
 11a:	0f 93       	push	r16
 11c:	1f 93       	push	r17
 11e:	10 91 00 01 	lds	r17, 0x0100
 122:	c0 90 01 01 	lds	r12, 0x0101
 126:	00 91 02 01 	lds	r16, 0x0102
 12a:	f0 90 03 01 	lds	r15, 0x0103
 12e:	e0 90 04 01 	lds	r14, 0x0104
 132:	d0 90 05 01 	lds	r13, 0x0105
 136:	b0 90 06 01 	lds	r11, 0x0106
 13a:	80 90 07 01 	lds	r8, 0x0107
 13e:	0e 94 20 01 	call	0x240	; 0x240 <BT_GPTimer_GetTimer1Value>
 142:	9c 01       	movw	r18, r24
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	92 2e       	mov	r9, r18
 152:	91 0e       	add	r9, r17
 154:	a1 e0       	ldi	r26, 0x01	; 1
 156:	92 16       	cp	r9, r18
 158:	08 f0       	brcs	.+2      	; 0x15c <BT_LifeTimer_Api_onCyclic+0x52>
 15a:	a0 e0       	ldi	r26, 0x00	; 0
 15c:	e3 2f       	mov	r30, r19
 15e:	ec 0d       	add	r30, r12
 160:	f1 e0       	ldi	r31, 0x01	; 1
 162:	e3 17       	cp	r30, r19
 164:	08 f0       	brcs	.+2      	; 0x168 <BT_LifeTimer_Api_onCyclic+0x5e>
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	aa 2e       	mov	r10, r26
 16a:	ae 0e       	add	r10, r30
 16c:	a1 e0       	ldi	r26, 0x01	; 1
 16e:	ae 16       	cp	r10, r30
 170:	08 f0       	brcs	.+2      	; 0x174 <BT_LifeTimer_Api_onCyclic+0x6a>
 172:	a0 e0       	ldi	r26, 0x00	; 0
 174:	fa 2b       	or	r31, r26
 176:	e1 e0       	ldi	r30, 0x01	; 1
 178:	04 17       	cp	r16, r20
 17a:	08 f0       	brcs	.+2      	; 0x17e <BT_LifeTimer_Api_onCyclic+0x74>
 17c:	e0 e0       	ldi	r30, 0x00	; 0
 17e:	cf 2e       	mov	r12, r31
 180:	c0 0e       	add	r12, r16
 182:	f1 e0       	ldi	r31, 0x01	; 1
 184:	c0 16       	cp	r12, r16
 186:	08 f0       	brcs	.+2      	; 0x18a <BT_LifeTimer_Api_onCyclic+0x80>
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	ef 2b       	or	r30, r31
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	f5 16       	cp	r15, r21
 190:	08 f0       	brcs	.+2      	; 0x194 <BT_LifeTimer_Api_onCyclic+0x8a>
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	1e 2f       	mov	r17, r30
 196:	1f 0d       	add	r17, r15
 198:	e1 e0       	ldi	r30, 0x01	; 1
 19a:	1f 15       	cp	r17, r15
 19c:	08 f0       	brcs	.+2      	; 0x1a0 <BT_LifeTimer_Api_onCyclic+0x96>
 19e:	e0 e0       	ldi	r30, 0x00	; 0
 1a0:	fe 2b       	or	r31, r30
 1a2:	e1 e0       	ldi	r30, 0x01	; 1
 1a4:	e6 16       	cp	r14, r22
 1a6:	08 f0       	brcs	.+2      	; 0x1aa <BT_LifeTimer_Api_onCyclic+0xa0>
 1a8:	e0 e0       	ldi	r30, 0x00	; 0
 1aa:	bf 2f       	mov	r27, r31
 1ac:	be 0d       	add	r27, r14
 1ae:	f1 e0       	ldi	r31, 0x01	; 1
 1b0:	be 15       	cp	r27, r14
 1b2:	08 f0       	brcs	.+2      	; 0x1b6 <BT_LifeTimer_Api_onCyclic+0xac>
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	ef 2b       	or	r30, r31
 1b8:	f1 e0       	ldi	r31, 0x01	; 1
 1ba:	d7 16       	cp	r13, r23
 1bc:	08 f0       	brcs	.+2      	; 0x1c0 <BT_LifeTimer_Api_onCyclic+0xb6>
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	ae 2f       	mov	r26, r30
 1c2:	ad 0d       	add	r26, r13
 1c4:	e1 e0       	ldi	r30, 0x01	; 1
 1c6:	ad 15       	cp	r26, r13
 1c8:	08 f0       	brcs	.+2      	; 0x1cc <BT_LifeTimer_Api_onCyclic+0xc2>
 1ca:	e0 e0       	ldi	r30, 0x00	; 0
 1cc:	fe 2b       	or	r31, r30
 1ce:	e1 e0       	ldi	r30, 0x01	; 1
 1d0:	b8 16       	cp	r11, r24
 1d2:	08 f0       	brcs	.+2      	; 0x1d6 <BT_LifeTimer_Api_onCyclic+0xcc>
 1d4:	e0 e0       	ldi	r30, 0x00	; 0
 1d6:	9f 2f       	mov	r25, r31
 1d8:	9b 0d       	add	r25, r11
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	9b 15       	cp	r25, r11
 1de:	08 f0       	brcs	.+2      	; 0x1e2 <BT_LifeTimer_Api_onCyclic+0xd8>
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	e8 2b       	or	r30, r24
 1e4:	e8 0d       	add	r30, r8
 1e6:	90 92 00 01 	sts	0x0100, r9
 1ea:	a0 92 01 01 	sts	0x0101, r10
 1ee:	c0 92 02 01 	sts	0x0102, r12
 1f2:	10 93 03 01 	sts	0x0103, r17
 1f6:	b0 93 04 01 	sts	0x0104, r27
 1fa:	a0 93 05 01 	sts	0x0105, r26
 1fe:	90 93 06 01 	sts	0x0106, r25
 202:	e0 93 07 01 	sts	0x0107, r30
 206:	0e 94 1d 01 	call	0x23a	; 0x23a <BT_GPTimer_ResetTimer1Value>
 20a:	1f 91       	pop	r17
 20c:	0f 91       	pop	r16
 20e:	ff 90       	pop	r15
 210:	ef 90       	pop	r14
 212:	df 90       	pop	r13
 214:	cf 90       	pop	r12
 216:	bf 90       	pop	r11
 218:	af 90       	pop	r10
 21a:	9f 90       	pop	r9
 21c:	8f 90       	pop	r8
 21e:	08 95       	ret

00000220 <BT_GPTimer_onReset>:
 220:	8f b5       	in	r24, 0x2f	; 47
 222:	8e 7f       	andi	r24, 0xFE	; 254
 224:	8f bd       	out	0x2f, r24	; 47
 226:	8f b5       	in	r24, 0x2f	; 47
 228:	8d 7f       	andi	r24, 0xFD	; 253
 22a:	8f bd       	out	0x2f, r24	; 47
 22c:	8e b5       	in	r24, 0x2e	; 46
 22e:	87 7f       	andi	r24, 0xF7	; 247
 230:	8e bd       	out	0x2e, r24	; 46
 232:	8e b5       	in	r24, 0x2e	; 46
 234:	8f 7e       	andi	r24, 0xEF	; 239
 236:	8e bd       	out	0x2e, r24	; 46
 238:	08 95       	ret

0000023a <BT_GPTimer_ResetTimer1Value>:
 23a:	1d bc       	out	0x2d, r1	; 45
 23c:	1c bc       	out	0x2c, r1	; 44
 23e:	08 95       	ret

00000240 <BT_GPTimer_GetTimer1Value>:
 240:	2c b5       	in	r18, 0x2c	; 44
 242:	3d b5       	in	r19, 0x2d	; 45
 244:	c9 01       	movw	r24, r18
 246:	08 95       	ret

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
